@import 'tailwindcss' source('../../');

@theme {
    --text-smaller: smaller;
    --text-x250: 250%;

    /*noinspection CssUnresolvedCustomProperty*/
    --font-sans: IBM Plex Sans, var(--font-plex-sans), Roboto, sans-serif;
    --font-mono: JetBrains Mono, ui-monospace, monospace;

    --column-width-max: 65ch;
    --column-half-width-max: 30ch;

    --column-width: min(var(--column-width-max), 90%, 100% - 2rem);
    --grid-template-columns-centre: 1fr var(--column-width) 1fr;

    --grid-column-2: 2;
}

/*
    The default border color has changed to `currentColor` in Tailwind CSS v4,
    so we've added these compatibility styles to make sure everything still
    looks the same as it did with Tailwind CSS v3.

    If we ever want to remove these styles, we need to add an explicit border
    color utility to any element that depends on these defaults.
*/
@layer base {
    *,
    ::after,
    ::before,
    ::backdrop,
    ::file-selector-button {
        border-color: var(--color-gray-200, currentColor);
    }
}

@utility grid-cols-centre {
    & > * {
        width: var(--column-width);
        align-self: center;
    }
    :is(& > :not(.bg-transparent)), :is(& > :is(.bg-transparent) > *) {
        @apply bg-slate-50/90 dark:bg-slate-900/90 px-4;
    }
}

@utility wrap-parens {
    @apply before:content-['('] after:content-[')'];
}

@utility bg-draft {
    @apply fixed -z-10 rotate-45 fill-slate-700;
    left: -50%;
    top: -50%;
    width: calc(200vw + 200vh);
    height: calc(200vw + 200vh);
    /* fill=slate-200 */
    @apply bg-[url('data:image/svg+xml;charset=UTF-8,%3csvg%20width="60"%20height="50"%20viewBox="0%200%2050%2050"%20xmlns="http://www.w3.org/2000/svg"%3e%3ctext%20fill="oklch(0.929%200.013%20255.508)"%20x="0"%20y="50"%3eDRAFT%3c/text%3e%3c/svg%3e')];
    /* fill=slate-700 */
    @apply dark:bg-[url('data:image/svg+xml;charset=UTF-8,%3csvg%20width="60"%20height="50"%20viewBox="0%200%2050%2050"%20xmlns="http://www.w3.org/2000/svg"%3e%3ctext%20fill="oklch(0.372%200.044%20257.287)"%20x="0"%20y="50"%3eDRAFT%3c/text%3e%3c/svg%3e')];
    background-repeat: repeat;
}

@utility columns-half-width {
    column-width: var(--column-half-width-max);
    column-gap: calc(var(--spacing) * 4)
}

@utility appear-10s {
    animation: opacityOn 300ms normal forwards;
    animation-delay: 10s;
    opacity: 0;
}

@keyframes opacityOn {
    0% {
        opacity: 0;
    }
    100% {
        opacity: 1;
    }
}

@layer base {
    :root {
        /* With thanks to https://jameshfisher.com/2024/03/12/a-formula-for-responsive-font-size/ */
        font-size: calc(1rem + 0.25vmax);
    }

    h1, h2, h3, h4, h5, h6 {
        @apply mt-[0.5lh] mb-[0.25lh] text-balance;
    }

    p, ol, ul, blockquote {
        @apply my-[0.5lh];
    }

    :is(div.flex, header) > :is(h1, h2, h3, h4, h5, h6, p, ol, ul, blockquote) {
        @apply my-[0.25lh];
    }

    h1 {
        @apply text-[200%] font-semibold;
    }

    h2 {
        @apply text-[180%] font-medium;
    }

    h3 {
        @apply text-[150%] font-medium;
    }

    h4 {
        @apply text-[140%] font-medium;
    }

    h5 {
        @apply text-[130%] font-[450];
    }

    h6 {
        @apply text-[120%] font-normal;
        ::before {
            content: '▸ ';
        }
    }

    a {
        @apply text-blue-800 visited:text-purple-800 dark:text-blue-200 dark:visited:text-purple-200 underline;
    }

    p, blockquote {
        @apply text-justify text-pretty;
    }

    ol {
        @apply list-decimal pl-[2ch];
    }

    ul {
        @apply list-disc pl-[2ch];
    }

    li {
        @apply list-item list-outside;
    }

    dl {
        margin-block: 1em;
    }

    dt {
        font-weight: bolder;
    }

    dd {
        margin-inline-start: 2ch;
    }

    nav {
        @apply pt-[0.5lh];
    }

    blockquote {
        @apply border-s-4 border-slate-300 dark:border-slate-500 ps-2 pe-3;
    }

    code {
        @apply normal-nums tabular-nums font-mono;
    }

    pre {
        overflow-inline: scroll;
    }

    button {
        @apply bg-blue-600 text-slate-200 hover:bg-blue-500 dark:bg-blue-300 dark:text-slate-800 dark:hover:bg-blue-400 rounded-md p-2;
    }

    main {
        overflow-inline: clip;
        display: block flow-root;
    }
}

@layer components {
    header > h1:first-child {
        @apply font-bold text-x250;
    }

    nav > *:not(:first-child)::before {
        content: ' ▸ ';
    }
}
